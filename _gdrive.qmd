```{r}
#| echo: false
#| message: false
#| eval: true
library("googledrive")
library("tidyverse")
library("gargle")

options(gargle_oauth_cache = "~/.cache/gargle",gargle_oauth_email="lynn.dewitt@noaa.gov")
#google_client <- gargle::gargle_oauth_client_from_json("/home/ldewitt/projects/IEA/docs/uploader/client_secret.json")
#drive_auth_configure(client = google_client)

## Given a vector of Google Drive Folder that form a path,
##  find the id of the last folder in the path
## solves issues with duplicate named folders by following a vector of paths
find_id_by_path <- function(folder_path){
  topfolder=drive_find(folder_path[1],n_max=5)
  id=topfolder$id[1]
  for (f in 2:length(folder_path)){
    query=paste("'",id,"' in parents and mimeType = 'application/vnd.google-apps.folder' and name = '",folder_path[f],"'",sep="")
    nextfolder=drive_find(q=query)
    id=nextfolder$id[1]
  }
    return(id)
}
## Return tibble of all the folders in a folder with id folder_id
find_folders_in_folder <- function(folder_id){
  query=paste("'",folder_id,"' in parents and mimeType = 'application/vnd.google-apps.folder' and trashed=false",sep="")
  folders=drive_find(orderBy="name",q=query)
  return(folders)
}
find_PI_files_in_esr_year <- function(PIid,esr_year){
  query=paste("'",PIid,"' in parents and mimeType = 'application/vnd.google-apps.folder' and name='",esr_year,"'",sep="") 
  yearfolder=drive_find(q=query) 
  query=paste("'",yearfolder$id,"' in parents and fileExtension = 'csv' and mimeType != 'application/vnd.google-apps.folder' and trashed=false",sep="")
 files = drive_find(orderBy="name",q=query)
 return(files)
}

localfromgmt <- function(utc){
  local=format(as.POSIXct(utc, tz = "UTC", format = "%Y-%m-%dT%H:%M:%S"),tz="America/Los_Angeles",usetz=TRUE)
  return(local)
}


```
